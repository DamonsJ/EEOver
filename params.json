{"name":"Eeover","tagline":"Ellipse-Ellipse overlap area","body":"[![Build Status](https://travis-ci.org/chraibi/EEOver.svg?branch=master)](https://travis-ci.org/chraibi/EEOver) [![GitHub license](https://img.shields.io/badge/license-GPL-blue.svg)](https://raw.githubusercontent.com/chraibi/EEOver/master/LICENSE) [![Twitter](https://img.shields.io/twitter/url/https/github.com/chraibi/EEOver.svg?style=social)](https://twitter.com/intent/tweet?text=Wow:&url=%5Bobject%20Object%5D)\r\n\r\n## Ellipse-Ellipse overlap area:\r\nThis program calculates the overlapping area of two arbitrary ellipses. It implements\r\nthe algorithm published in this [paper](http://link.springer.com/article/10.1007%2Fs00791-013-0214-3). See also the available [preprint](http://arxiv.org/abs/1106.3787).\r\n\r\n\r\n### Usage: \r\n- compile the code:\r\n```\r\nmake\r\n```\r\n\r\nThis should produce an executable (overlap)\r\n- run the executable with an input-file and an id:\r\n\r\n```\r\n./overlap inputfile id\r\n```\r\n\r\n`id` is 1 or 2 to choose between two different quartic solvers.\r\n\r\n- This should produce two output-files:\r\n  - **result-File** called `results.txt`\r\n  - **root-File** called `roots.txt`\r\n\r\n### Contents and Formats of files: \r\n- the **input-File** should be in the following format\r\n\r\n```\r\nid A1 B1 H1 K1 PHI_1 A2 B2 H2 K2 PHI_2\r\n```\r\n\r\n(11 columns)\r\n\r\n`id` is a running number, `Ax`  and `Bx` are semi-axes of the one ellipse with the center coordinates `(Hx, Kx)` and the inclination with respect to the x-axis `Phi_x` _(x in {1, 2})_\r\n\r\n- **results-File** is in the following format: \r\n\r\n```\r\nid areaE1 (=pi.A1.B1) areaE2 (=pi.A2.B2) OverlapAreaAnalytical OverlapAreaPolynomial rel_err\r\n```\r\n\r\n- **roots-File** contains the coordinates of the intersection points (if any):\r\n\r\n````\r\nid x0 y0 x1 y1 x2 y2 ...\r\n```\r\n\r\nthis file is used by the [plot-script](https://github.com/chraibi/EEOver/blob/master/plot.py)\r\n\r\n### How to visualize the results: \r\nIt is of great value to visualize the results and check visually if the computed intersection points are correct. \r\nCall the script `plot.py` as follows\r\n\r\n```\r\npython plot.py inputFile rootsFile resultsFile\r\n```\r\n\r\nThat would produce in the directory **./cases/** a couple of  png's.\r\n\r\n### Requirements:\r\n- > [GSL](http://www.gnu.org/software/gsl/): to solve the quartic equations \r\n- _(optional)_ > [Boost.polygon](http://www.boost.org/doc/libs/1_54_0/libs/polygon/doc/index.htm): to compare the results of this code, \r\nthe overlap-area of polygonized ellipses is calculated with Boost.polygon.\r\n\r\n###Remarks:\r\n\r\nThe solver of the quartic function is the central part of the code. Actually, two different solvers are used separately: \r\n- [gsl_poly_complex_solve()](http://linux.math.tifr.res.in/manuals/html/gsl-ref-html/gsl-ref_6.html) from GSL,\r\n- and [gsl_poly_complex_solve_quartic()](http://www.network-theory.co.uk/download/gslextras/Quartic/00README.txt) from Andrew Steiner.          \r\n\r\nThe second one is faster, however fails to calculate accurately the roots of [test_5](test5.txt)..\r\n\r\n@todo: Implement the algorithm from the paper [The fast quartic solver](http://www.sciencedirect.com/science/article/pii/S0377042710002128) by Peter Strobach.\r\n","google":"UA-17686252-1","note":"Don't delete this file! It's used internally to help with page regeneration."}